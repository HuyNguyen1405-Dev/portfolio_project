// Translations data for multi-language support
const translations = {
    en: {
        // Navigation
        nav: {
            home: "Home",
            about: "About",
            services: "Services",
            portfolio: "Portfolio",
            contact: "Contact"
        },

        // Home Section
        home: {
            greeting: "I'm",
            name: "Nguyen Van Huy",
            profession: "I'm a",
            professions: ["Full Stack Developer", "Web Developer", "Mobile App Developer", "UI/UX Designer"],
            description: "üöÄ Passionate full-stack developer with <strong>2+ years</strong> of experience creating amazing digital experiences. I specialize in building scalable web applications using modern technologies like <strong>ASP.NET Core</strong>, <strong>React</strong>, and <strong>Flutter</strong>.",
            stats: {
                projects: "Projects Completed",
                experience: "Years Experience",
                satisfaction: "Client Satisfaction"
            },
            buttons: {
                hireMe: "Hire Me",
                viewWork: "View Work",
                downloadCV: "Download CV"
            },
            socialLabel: "Connect with me:",
            scrollText: "Scroll to explore"
        },

        // About Section
        about: {
            title: "About Me",
            subtitle: "I'm Huy and I'm a",
            profession: "Web Developer",
            description: "With a strong foundation in computer science and years of hands-on experience, I specialize in building robust web applications using cutting-edge technologies. My expertise spans from frontend development with modern frameworks to backend development with ASP.NET Core. I'm passionate about creating seamless user experiences and writing clean, maintainable code that scales.",
            personalInfo: {
                birthday: "Birthday:",
                age: "Age:",
                website: "Website:",
                email: "Email:",
                degree: "Degree:",
                phone: "Phone:",
                city: "City:",
                freelance: "Freelance:",
                values: {
                    birthday: "May 14, 2001",
                    age: "24",
                    website: "www.nguyenvanhuy.dev",
                    email: "huynv14.work@gmail.com",
                    degree: "Computer Science",
                    phone: "0392 67 67 58",
                    city: "Da Nang City",
                    freelance: "Available"
                }
            },
            buttons: {
                downloadCV: "Download CV",
                hireMe: "Hire Me"
            },
            education: {
                title: "Education",
                items: [
                    {
                        period: "2019 - 2023",
                        title: "Bachelor of Computer Science",
                        description: "Graduated with honors from University of Greenwich (VietNam) Da Nang Campus. Specialized in software engineering with focus on web development, database design, and modern programming paradigms."
                    },
                    {
                        period: "2023 - Present",
                        title: "Continuous Learning & Certifications",
                        description: "Actively pursuing advanced certifications in cloud computing (Azure), modern JavaScript frameworks, and mobile development. Committed to staying current with emerging technologies and best practices."
                    }
                ]
            },
            experience: {
                title: "Experience",
                items: [
                    {
                        period: "11/2023 - Present",
                        title: "Full Stack Developer At Thaco Auto",
                        description: "Development of enterprise web applications using ASP.NET Core and React. Responsible for architecture design, database optimization, and implementing modern CI/CD practices. Successfully delivered 3+ major projects."
                    },
                    {
                        period: "04/2023 - 05/2023",
                        title: "Fresher Front-End Developer At ST software company",
                        description: "Developed responsive web applications using modern frontend frameworks. Collaborated with design teams to implement pixel-perfect UI/UX designs. Gained experience in agile development methodologies and version control."
                    }
                ]
            }
        },

        // Services Section
        services: {
            title: "Services",
            items: [
                {
                    title: "Web Design",
                    description: "Creating beautiful, responsive, and user-friendly web designs that work perfectly across all devices and browsers."
                },
                {
                    title: "Web Development",
                    description: "Full-stack web development using modern technologies like ASP.NET Core, React, and SQL Server for robust applications."
                },
                {
                    title: "UI/UX Design",
                    description: "Designing intuitive user interfaces and seamless user experiences that engage users and drive conversions."
                },
                {
                    title: "Mobile App Development",
                    description: "Cross-platform mobile app development using Flutter to create native-like experiences for both iOS and Android."
                },
                {
                    title: "SEO Optimization",
                    description: "Optimizing websites for search engines to improve visibility, ranking, and organic traffic growth."
                },
                {
                    title: "API Development",
                    description: "Building robust RESTful APIs and microservices architecture for scalable and maintainable applications."
                }
            ]
        },

        // Portfolio Section
        portfolio: {
            title: "Portfolio",
            subtitle: "My Last Projects:",
            filters: {
                all: "All",
                webApp: "Web App",
                mobileApp: "Mobile App"
            },
            projects: [
                {
                    title: "Production Management Software At Thaco Auto",
                    description: "Smart production management system with modern interface",
                    demoText: "View Demo",
                    detailText: "View Details"
                },
                {
                    title: "ERP System At Thaco Auto",
                    description: "Comprehensive ERP system for enterprise management"
                },
                {
                    title: "Vehicle delivery software at Thaco Auto",
                    description: "Smart vehicle delivery management system with real-time tracking and route optimization"
                },
                {
                    title: "Vehicle inventory management software at Thaco Auto",
                    description: "Vehicle inventory management system with real-time tracking, data analytics and automated reporting"
                },
                {
                    title: "Production Management Application",
                    description: "Mobile production management app with real-time dashboard monitoring and smart reporting"
                }
            ]
        },

        // Contact Section
        contact: {
            title: "Contact",
            subtitle: "Have You Any Questions?",
            serviceText: "I'M AT YOUR SERVICE",
            emailTitle: "SEND ME AN EMAIL",
            responseText: "I'M VERY RESPONSIVE TO MESSAGES",
            info: {
                phone: "Call Us On",
                office: "Office",
                email: "Email",
                website: "Website"
            },
            form: {
                name: "Name",
                email: "Email",
                subject: "Subject",
                message: "Message",
                send: "Send Message",
                note: "Or email me directly at:",
                success: {
                    title: "Message Sent Successfully!",
                    description: "Thank you for contacting me! Your message has been sent to",
                    response: "I'll get back to you as soon as possible, usually within 24 hours.",
                    close: "Close",
                    direct: "You can also reach me directly at:"
                }
            }
        },

        // Profile
        profile: {
            name: "Nguyen Van Huy",
            role: "Full Stack Developer"
        }
    },

    vi: {
        // Navigation
        nav: {
            home: "Trang ch·ªß",
            about: "V·ªÅ t√¥i",
            services: "D·ªãch v·ª•",
            portfolio: "D·ª± √°n",
            contact: "Li√™n h·ªá"
        },

        // Home Section
        home: {
            greeting: "T√¥i l√†",
            name: "Nguy·ªÖn VƒÉn Huy",
            profession: "T√¥i l√† m·ªôt",
            professions: ["L·∫≠p tr√¨nh vi√™n Full Stack", "L·∫≠p tr√¨nh vi√™n Web", "L·∫≠p tr√¨nh vi√™n ·ª©ng d·ª•ng di ƒë·ªông", "Thi·∫øt k·∫ø UI/UX"],
            description: "üöÄ L·∫≠p tr√¨nh vi√™n full-stack ƒëam m√™ v·ªõi h∆°n <strong>2 nƒÉm</strong> kinh nghi·ªám t·∫°o ra nh·ªØng tr·∫£i nghi·ªám s·ªë tuy·ªát v·ªùi. T√¥i chuy√™n x√¢y d·ª±ng ·ª©ng d·ª•ng web c√≥ th·ªÉ m·ªü r·ªông b·∫±ng c√°c c√¥ng ngh·ªá hi·ªán ƒë·∫°i nh∆∞ <strong>ASP.NET Core</strong>, <strong>React</strong>, v√† <strong>Flutter</strong>.",
            stats: {
                projects: "D·ª± √°n ho√†n th√†nh",
                experience: "NƒÉm kinh nghi·ªám",
                satisfaction: "S·ª± h√†i l√≤ng kh√°ch h√†ng"
            },
            buttons: {
                hireMe: "Thu√™ t√¥i",
                viewWork: "Xem c√¥ng vi·ªác",
                downloadCV: "T·∫£i CV"
            },
            socialLabel: "K·∫øt n·ªëi v·ªõi t√¥i:",
            scrollText: "Cu·ªôn ƒë·ªÉ kh√°m ph√°"
        },

        // About Section
        about: {
            title: "V·ªÅ t√¥i",
            subtitle: "T√¥i l√† Huy v√† t√¥i l√† m·ªôt",
            profession: "L·∫≠p tr√¨nh vi√™n Web",
            description: "V·ªõi n·ªÅn t·∫£ng v·ªØng ch·∫Øc v·ªÅ khoa h·ªçc m√°y t√≠nh v√† nhi·ªÅu nƒÉm kinh nghi·ªám th·ª±c ti·ªÖn, t√¥i chuy√™n x√¢y d·ª±ng c√°c ·ª©ng d·ª•ng web m·∫°nh m·∫Ω b·∫±ng c√°c c√¥ng ngh·ªá ti√™n ti·∫øn. Chuy√™n m√¥n c·ªßa t√¥i tr·∫£i d√†i t·ª´ ph√°t tri·ªÉn frontend v·ªõi c√°c framework hi·ªán ƒë·∫°i ƒë·∫øn ph√°t tri·ªÉn backend v·ªõi ASP.NET Core. T√¥i ƒëam m√™ t·∫°o ra tr·∫£i nghi·ªám ng∆∞·ªùi d√πng li·ªÅn m·∫°ch v√† vi·∫øt code s·∫°ch, d·ªÖ b·∫£o tr√¨ c√≥ th·ªÉ m·ªü r·ªông.",
            personalInfo: {
                birthday: "Ng√†y sinh:",
                age: "Tu·ªïi:",
                website: "Website:",
                email: "Email:",
                degree: "B·∫±ng c·∫•p:",
                phone: "ƒêi·ªán tho·∫°i:",
                city: "Th√†nh ph·ªë:",
                freelance: "Freelance:",
                values: {
                    birthday: "14 th√°ng 5, 2001",
                    age: "24",
                    website: "www.nguyenvanhuy.dev",
                    email: "huynv14.work@gmail.com",
                    degree: "Khoa h·ªçc m√°y t√≠nh",
                    phone: "0392 67 67 58",
                    city: "Th√†nh ph·ªë ƒê√† N·∫µng",
                    freelance: "C√≥ s·∫µn"
                }
            },
            buttons: {
                downloadCV: "T·∫£i CV",
                hireMe: "Thu√™ t√¥i"
            },
            education: {
                title: "H·ªçc v·∫•n",
                items: [
                    {
                        period: "2019 - 2023",
                        title: "C·ª≠ nh√¢n Khoa h·ªçc m√°y t√≠nh",
                        description: "T·ªët nghi·ªáp lo·∫°i gi·ªèi t·ª´ ƒê·∫°i h·ªçc Greenwich (Vi·ªát Nam) - C∆° s·ªü ƒê√† N·∫µng. Chuy√™n ng√†nh k·ªπ thu·∫≠t ph·∫ßn m·ªÅm v·ªõi tr·ªçng t√¢m ph√°t tri·ªÉn web, thi·∫øt k·∫ø c∆° s·ªü d·ªØ li·ªáu v√† c√°c m√¥ h√¨nh l·∫≠p tr√¨nh hi·ªán ƒë·∫°i."
                    },
                    {
                        period: "2023 - Hi·ªán t·∫°i",
                        title: "H·ªçc t·∫≠p li√™n t·ª•c & Ch·ª©ng ch·ªâ",
                        description: "T√≠ch c·ª±c theo ƒëu·ªïi c√°c ch·ª©ng ch·ªâ n√¢ng cao v·ªÅ ƒëi·ªán to√°n ƒë√°m m√¢y (Azure), c√°c framework JavaScript hi·ªán ƒë·∫°i v√† ph√°t tri·ªÉn di ƒë·ªông. Cam k·∫øt c·∫≠p nh·∫≠t c√°c c√¥ng ngh·ªá m·ªõi n·ªïi v√† th·ª±c ti·ªÖn t·ªët nh·∫•t."
                    }
                ]
            },
            experience: {
                title: "Kinh nghi·ªám",
                items: [
                    {
                        period: "11/2023 - Hi·ªán t·∫°i",
                        title: "L·∫≠p tr√¨nh vi√™n Full Stack t·∫°i Thaco Auto",
                        description: "Ph√°t tri·ªÉn ·ª©ng d·ª•ng web doanh nghi·ªáp s·ª≠ d·ª•ng ASP.NET Core v√† React. Ch·ªãu tr√°ch nhi·ªám thi·∫øt k·∫ø ki·∫øn tr√∫c, t·ªëi ∆∞u h√≥a c∆° s·ªü d·ªØ li·ªáu v√† tri·ªÉn khai c√°c th·ª±c ti·ªÖn CI/CD hi·ªán ƒë·∫°i. ƒê√£ giao h√†ng th√†nh c√¥ng h∆°n 3 d·ª± √°n l·ªõn."
                    },
                    {
                        period: "04/2023 - 05/2023",
                        title: "L·∫≠p tr√¨nh vi√™n Front-End m·ªõi t·∫°i c√¥ng ty ph·∫ßn m·ªÅm ST",
                        description: "Ph√°t tri·ªÉn ·ª©ng d·ª•ng web responsive s·ª≠ d·ª•ng c√°c framework frontend hi·ªán ƒë·∫°i. H·ª£p t√°c v·ªõi c√°c nh√≥m thi·∫øt k·∫ø ƒë·ªÉ tri·ªÉn khai thi·∫øt k·∫ø UI/UX ho√†n h·∫£o t·ª´ng pixel. C√≥ kinh nghi·ªám v·ªÅ ph∆∞∆°ng ph√°p ph√°t tri·ªÉn agile v√† ki·ªÉm so√°t phi√™n b·∫£n."
                    }
                ]
            }
        },

        // Services Section  
        services: {
            title: "D·ªãch v·ª•",
            items: [
                {
                    title: "Thi·∫øt k·∫ø Web",
                    description: "T·∫°o ra c√°c thi·∫øt k·∫ø web ƒë·∫πp, responsive v√† th√¢n thi·ªán v·ªõi ng∆∞·ªùi d√πng ho·∫°t ƒë·ªông ho√†n h·∫£o tr√™n m·ªçi thi·∫øt b·ªã v√† tr√¨nh duy·ªát."
                },
                {
                    title: "Ph√°t tri·ªÉn Web",
                    description: "Ph√°t tri·ªÉn web full-stack s·ª≠ d·ª•ng c√°c c√¥ng ngh·ªá hi·ªán ƒë·∫°i nh∆∞ ASP.NET Core, React v√† SQL Server cho c√°c ·ª©ng d·ª•ng m·∫°nh m·∫Ω."
                },
                {
                    title: "Thi·∫øt k·∫ø UI/UX",
                    description: "Thi·∫øt k·∫ø giao di·ªán ng∆∞·ªùi d√πng tr·ª±c quan v√† tr·∫£i nghi·ªám ng∆∞·ªùi d√πng li·ªÅn m·∫°ch thu h√∫t ng∆∞·ªùi d√πng v√† th√∫c ƒë·∫©y chuy·ªÉn ƒë·ªïi."
                },
                {
                    title: "Ph√°t tri·ªÉn ·ª©ng d·ª•ng di ƒë·ªông",
                    description: "Ph√°t tri·ªÉn ·ª©ng d·ª•ng di ƒë·ªông ƒëa n·ªÅn t·∫£ng s·ª≠ d·ª•ng Flutter ƒë·ªÉ t·∫°o tr·∫£i nghi·ªám gi·ªëng native cho c·∫£ iOS v√† Android."
                },
                {
                    title: "T·ªëi ∆∞u h√≥a SEO",
                    description: "T·ªëi ∆∞u h√≥a trang web cho c√°c c√¥ng c·ª• t√¨m ki·∫øm ƒë·ªÉ c·∫£i thi·ªán kh·∫£ nƒÉng hi·ªÉn th·ªã, x·∫øp h·∫°ng v√† tƒÉng tr∆∞·ªüng l∆∞u l∆∞·ª£ng t·ª± nhi√™n."
                },
                {
                    title: "Ph√°t tri·ªÉn API",
                    description: "X√¢y d·ª±ng API RESTful m·∫°nh m·∫Ω v√† ki·∫øn tr√∫c microservices cho c√°c ·ª©ng d·ª•ng c√≥ th·ªÉ m·ªü r·ªông v√† d·ªÖ b·∫£o tr√¨."
                }
            ]
        },

        // Portfolio Section
        portfolio: {
            title: "D·ª± √°n",
            subtitle: "C√°c d·ª± √°n g·∫ßn ƒë√¢y c·ªßa t√¥i:",
            filters: {
                all: "T·∫•t c·∫£",
                webApp: "·ª®ng d·ª•ng Web",
                mobileApp: "·ª®ng d·ª•ng di ƒë·ªông"
            },
            projects: [
                {
                    title: "Ph·∫ßn m·ªÅm qu·∫£n l√Ω s·∫£n xu·∫•t t·∫°i Thaco Auto",
                    description: "H·ªá th·ªëng qu·∫£n l√Ω s·∫£n xu·∫•t th√¥ng minh v·ªõi giao di·ªán hi·ªán ƒë·∫°i",
                    demoText: "Xem Demo",
                    detailText: "Xem Chi ti·∫øt"
                },
                {
                    title: "H·ªá th·ªëng ERP t·∫°i Thaco Auto",
                    description: "H·ªá th·ªëng ERP t√≠ch h·ª£p to√†n di·ªán cho qu·∫£n l√Ω doanh nghi·ªáp"
                },
                {
                    title: "Ph·∫ßn m·ªÅm giao h√†ng xe t·∫°i Thaco Auto",
                    description: "H·ªá th·ªëng qu·∫£n l√Ω giao h√†ng xe th√¥ng minh v·ªõi theo d√µi th·ªùi gian th·ª±c v√† t·ªëi ∆∞u h√≥a tuy·∫øn ƒë∆∞·ªùng"
                },
                {
                    title: "Ph·∫ßn m·ªÅm qu·∫£n l√Ω t·ªìn kho xe t·∫°i Thaco Auto",
                    description: "H·ªá th·ªëng qu·∫£n l√Ω t·ªìn kho xe v·ªõi theo d√µi real-time, ph√¢n t√≠ch d·ªØ li·ªáu v√† b√°o c√°o t·ª± ƒë·ªông"
                },
                {
                    title: "·ª®ng d·ª•ng qu·∫£n l√Ω s·∫£n xu·∫•t",
                    description: "·ª®ng d·ª•ng di ƒë·ªông qu·∫£n l√Ω s·∫£n xu·∫•t v·ªõi dashboard theo d√µi realtime v√† b√°o c√°o th√¥ng minh"
                }
            ]
        },

        // Contact Section
        contact: {
            title: "Li√™n h·ªá",
            subtitle: "B·∫°n c√≥ c√¢u h·ªèi n√†o kh√¥ng?",
            serviceText: "T√îI S·∫¥N S√ÄNG PH·ª§C V·ª§ B·∫†N",
            emailTitle: "G·ª¨I EMAIL CHO T√îI",
            responseText: "T√îI PH·∫¢N H·ªíI TIN NH·∫ÆN R·∫§T NHANH",
            info: {
                phone: "G·ªçi cho ch√∫ng t√¥i",
                office: "VƒÉn ph√≤ng",
                email: "Email",
                website: "Website"
            },
            form: {
                name: "T√™n",
                email: "Email",
                subject: "Ch·ªß ƒë·ªÅ",
                message: "Tin nh·∫Øn",
                send: "G·ª≠i tin nh·∫Øn",
                note: "Ho·∫∑c g·ª≠i email tr·ª±c ti·∫øp cho t√¥i:",
                success: {
                    title: "G·ª≠i tin nh·∫Øn th√†nh c√¥ng!",
                    description: "C·∫£m ∆°n b·∫°n ƒë√£ li√™n h·ªá v·ªõi t√¥i! Tin nh·∫Øn c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c g·ª≠i ƒë·∫øn",
                    response: "T√¥i s·∫Ω ph·∫£n h·ªìi b·∫°n s·ªõm nh·∫•t c√≥ th·ªÉ, th∆∞·ªùng trong v√≤ng 24 gi·ªù.",
                    close: "ƒê√≥ng",
                    direct: "B·∫°n c≈©ng c√≥ th·ªÉ li√™n h·ªá tr·ª±c ti·∫øp v·ªõi t√¥i t·∫°i:"
                }
            }
        },

        // Profile
        profile: {
            name: "Nguy·ªÖn VƒÉn Huy",
            role: "L·∫≠p tr√¨nh vi√™n Full Stack"
        }
    }
};

// Language switching functionality
class LanguageManager {
    constructor() {
        this.currentLanguage = localStorage.getItem('language') || 'en';
        this.init();
    }

    init() {
        this.createLanguageToggle();
        this.setLanguage(this.currentLanguage);
        this.setupEventListeners();
    }

    createLanguageToggle() {
        // Check if language toggle already exists
        if (document.querySelector('.language-toggle')) {
            console.log('Language toggle already exists');
            return;
        }

        const languageToggle = document.createElement('div');
        languageToggle.className = 'language-toggle';
        languageToggle.innerHTML = `
            <div class="language-switcher">
                <button class="lang-btn ${this.currentLanguage === 'en' ? 'active' : ''}" data-lang="en">
                    <span class="flag">üá∫üá∏</span>
                    <span class="lang-text">EN</span>
                </button>
                <button class="lang-btn ${this.currentLanguage === 'vi' ? 'active' : ''}" data-lang="vi">
                    <span class="flag">üáªüá≥</span>
                    <span class="lang-text">VI</span>
                </button>
            </div>
        `;

        // Try to add to sidebar footer first
        const sidebarFooter = document.querySelector('.sidebar-footer');
        if (sidebarFooter) {
            sidebarFooter.insertBefore(languageToggle, sidebarFooter.firstChild);
            console.log('Language toggle added to sidebar footer');
        } else {
            // Fallback: add to body as fixed element
            languageToggle.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                z-index: 9999;
                background: var(--bg-black-100);
                border: 1px solid var(--bg-black-50);
                border-radius: 25px;
                padding: 8px;
                box-shadow: 0 5px 15px var(--shadow-color);
            `;
            document.body.appendChild(languageToggle);
            console.log('Language toggle added to body as fallback');
        }
    }

    setupEventListeners() {
        // Use event delegation for better performance and reliability
        document.addEventListener('click', (e) => {
            const langBtn = e.target.closest('.lang-btn');
            if (langBtn) {
                e.preventDefault();
                e.stopPropagation();

                const newLang = langBtn.dataset.lang;
                console.log('Language button clicked:', newLang);

                if (newLang && newLang !== this.currentLanguage) {
                    this.setLanguage(newLang);
                }
            }
        });

        console.log('Language event listeners set up');
    }

    setLanguage(lang) {
        console.log('Setting language to:', lang);
        this.currentLanguage = lang;
        localStorage.setItem('language', lang);

        // Update active button
        document.querySelectorAll('.lang-btn').forEach(btn => {
            btn.classList.toggle('active', btn.dataset.lang === lang);
        });

        // Update document language
        document.documentElement.lang = lang;

        // Update content
        this.updateContent();

        // Update typing animation if it exists
        if (window.typingAnimation) {
            window.typingAnimation.destroy();
            setTimeout(() => {
                this.initTypingAnimation();
            }, 100);
        }

        console.log('Language switched to:', lang);
    }

    updateContent() {
        const t = translations[this.currentLanguage];

        // Update navigation
        this.updateNavigation(t.nav);

        // Update home section
        this.updateHomeSection(t.home);

        // Update about section
        this.updateAboutSection(t.about);

        // Update services section
        this.updateServicesSection(t.services);

        // Update portfolio section
        this.updatePortfolioSection(t.portfolio);

        // Update contact section
        this.updateContactSection(t.contact);

        // Update profile info
        this.updateProfileInfo(t.profile);
    }

    updateNavigation(nav) {
        // Update main navigation
        const navItems = document.querySelectorAll('.nav a span');
        if (navItems.length >= 5) {
            navItems[0].textContent = nav.home;
            navItems[1].textContent = nav.about;
            navItems[2].textContent = nav.services;
            navItems[3].textContent = nav.portfolio;
            navItems[4].textContent = nav.contact;
        }

        // Update tooltips
        const tooltips = document.querySelectorAll('.nav-tooltip');
        if (tooltips.length >= 5) {
            tooltips[0].textContent = this.currentLanguage === 'vi' ? 'Trang ch·ªß' : 'Home';
            tooltips[1].textContent = this.currentLanguage === 'vi' ? 'V·ªÅ t√¥i' : 'About';
            tooltips[2].textContent = this.currentLanguage === 'vi' ? 'D·ªãch v·ª•' : 'Services';
            tooltips[3].textContent = this.currentLanguage === 'vi' ? 'D·ª± √°n' : 'Portfolio';
            tooltips[4].textContent = this.currentLanguage === 'vi' ? 'Li√™n h·ªá' : 'Contact';
        }
    }

    updateHomeSection(home) {
        // Update name and profession
        const nameTitle = document.querySelector('.name-title');
        if (nameTitle) {
            nameTitle.innerHTML = `${home.greeting} <span class="highlight">${home.name}</span>`;
        }

        const professionLabel = document.querySelector('.profession-label');
        if (professionLabel) {
            professionLabel.textContent = home.profession + ' ';
        }

        // Update description
        const description = document.querySelector('.home-info .description');
        if (description) {
            description.innerHTML = home.description;
        }

        // Update stats
        const statLabels = document.querySelectorAll('.stat-label');
        if (statLabels.length >= 3) {
            statLabels[0].textContent = home.stats.projects;
            statLabels[1].textContent = home.stats.experience;
            statLabels[2].textContent = home.stats.satisfaction;
        }

        // Update buttons
        const hireMeBtn = document.querySelector('.hire-me');
        if (hireMeBtn) {
            hireMeBtn.innerHTML = `<i class="fas fa-envelope"></i> ${home.buttons.hireMe}`;
        }

        const viewWorkBtn = document.querySelector('.btn-secondary');
        if (viewWorkBtn) {
            viewWorkBtn.innerHTML = `<i class="fas fa-eye"></i> ${home.buttons.viewWork}`;
        }

        const downloadCVBtn = document.querySelector('.btn-outline');
        if (downloadCVBtn) {
            downloadCVBtn.innerHTML = `<i class="fas fa-download"></i> ${home.buttons.downloadCV}`;
        }

        // Update social label
        const socialLabel = document.querySelector('.social-label');
        if (socialLabel) {
            socialLabel.textContent = home.socialLabel;
        }

        // Update scroll indicator
        const scrollText = document.querySelector('.scroll-indicator span');
        if (scrollText) {
            scrollText.textContent = home.scrollText;
        }
    }

    updateAboutSection(about) {
        // Update section title
        const aboutTitle = document.querySelector('#about .section-title h2');
        if (aboutTitle) {
            aboutTitle.textContent = about.title;
        }

        // Update subtitle
        const aboutSubtitle = document.querySelector('.about-text h3');
        if (aboutSubtitle) {
            aboutSubtitle.innerHTML = `${about.subtitle} <span>${about.profession}</span>`;
        }

        // Update description
        const aboutDescription = document.querySelector('.about-text p');
        if (aboutDescription) {
            aboutDescription.textContent = about.description;
        }

        // Update personal info
        const infoItems = document.querySelectorAll('.info-item p');
        if (infoItems.length >= 8) {
            infoItems[0].innerHTML = `${about.personalInfo.birthday} <span>${about.personalInfo.values.birthday}</span>`;
            infoItems[1].innerHTML = `${about.personalInfo.age} <span>${about.personalInfo.values.age}</span>`;
            infoItems[2].innerHTML = `${about.personalInfo.website} <span>${about.personalInfo.values.website}</span>`;
            infoItems[3].innerHTML = `${about.personalInfo.email} <span>${about.personalInfo.values.email}</span>`;
            infoItems[4].innerHTML = `${about.personalInfo.degree} <span>${about.personalInfo.values.degree}</span>`;
            infoItems[5].innerHTML = `${about.personalInfo.phone} <span>${about.personalInfo.values.phone}</span>`;
            infoItems[6].innerHTML = `${about.personalInfo.city} <span>${about.personalInfo.values.city}</span>`;
            infoItems[7].innerHTML = `${about.personalInfo.freelance} <span>${about.personalInfo.values.freelance}</span>`;
        }

        // Update buttons
        const aboutBtns = document.querySelectorAll('.about-content .btn');
        if (aboutBtns.length >= 2) {
            aboutBtns[0].textContent = about.buttons.downloadCV;
            aboutBtns[1].textContent = about.buttons.hireMe;
        }

        // Update education
        const educationTitle = document.querySelector('.education .title');
        if (educationTitle) {
            educationTitle.textContent = about.education.title;
        }

        const educationItems = document.querySelectorAll('.education .timeline-item');
        educationItems.forEach((item, index) => {
            if (about.education.items[index]) {
                const title = item.querySelector('.timeline-title');
                const text = item.querySelector('.timeline-text');
                if (title) title.textContent = about.education.items[index].title;
                if (text) text.textContent = about.education.items[index].description;
            }
        });

        // Update experience
        const experienceTitle = document.querySelector('.experience .title');
        if (experienceTitle) {
            experienceTitle.textContent = about.experience.title;
        }

        const experienceItems = document.querySelectorAll('.experience .timeline-item');
        experienceItems.forEach((item, index) => {
            if (about.experience.items[index]) {
                const title = item.querySelector('.timeline-title');
                const text = item.querySelector('.timeline-text');
                if (title) title.textContent = about.experience.items[index].title;
                if (text) text.textContent = about.experience.items[index].description;
            }
        });
    }

    updateServicesSection(services) {
        // Update section title
        const servicesTitle = document.querySelector('#services .section-title h2');
        if (servicesTitle) {
            servicesTitle.textContent = services.title;
        }

        // Update service items
        const serviceItems = document.querySelectorAll('.service-item-inner');
        serviceItems.forEach((item, index) => {
            if (services.items[index]) {
                const title = item.querySelector('h4');
                const description = item.querySelector('p');
                if (title) title.textContent = services.items[index].title;
                if (description) description.textContent = services.items[index].description;
            }
        });
    }

    updatePortfolioSection(portfolio) {
        // Update section title
        const portfolioTitle = document.querySelector('#portfolio .section-title h2');
        if (portfolioTitle) {
            portfolioTitle.textContent = portfolio.title;
        }

        // Update subtitle
        const portfolioSubtitle = document.querySelector('.portfolio-heading h2');
        if (portfolioSubtitle) {
            portfolioSubtitle.textContent = portfolio.subtitle;
        }

        // Update filter buttons
        const filterBtns = document.querySelectorAll('.portfolio-filter-btn');
        if (filterBtns.length >= 3) {
            filterBtns[0].textContent = portfolio.filters.all;
            filterBtns[1].textContent = portfolio.filters.webApp;
            filterBtns[2].textContent = portfolio.filters.mobileApp;
        }

        // Update portfolio items
        const portfolioItems = document.querySelectorAll('.portfolio-info');
        portfolioItems.forEach((item, index) => {
            if (portfolio.projects[index]) {
                const title = item.querySelector('h4');
                const description = item.querySelector('p');
                if (title) title.textContent = portfolio.projects[index].title;
                if (description) description.textContent = portfolio.projects[index].description;
            }
        });

        // Update demo links
        const demoLinks = document.querySelectorAll('.portfolio-action[title*="Demo"], .portfolio-action[title*="Xem Demo"]');
        demoLinks.forEach(link => {
            link.title = portfolio.projects[0]?.demoText || (this.currentLanguage === 'vi' ? 'Xem Demo' : 'View Demo');
        });
    }

    updateContactSection(contact) {
        // Update section title
        const contactTitle = document.querySelector('#contact .section-title h2');
        if (contactTitle) {
            contactTitle.textContent = contact.title;
        }

        // Update subtitles
        const contactSubtitles = document.querySelectorAll('.contact-title');
        if (contactSubtitles.length >= 2) {
            contactSubtitles[0].textContent = contact.subtitle;
            contactSubtitles[1].textContent = contact.emailTitle;
        }

        const contactSubTexts = document.querySelectorAll('.contact-sub-title');
        if (contactSubTexts.length >= 2) {
            contactSubTexts[0].textContent = contact.serviceText;
            contactSubTexts[1].textContent = contact.responseText;
        }

        // Update contact info
        const contactInfoItems = document.querySelectorAll('.contact-info-item h4');
        if (contactInfoItems.length >= 4) {
            contactInfoItems[0].textContent = contact.info.phone;
            contactInfoItems[1].textContent = contact.info.office;
            contactInfoItems[2].textContent = contact.info.email;
            contactInfoItems[3].textContent = contact.info.website;
        }

        // Update form placeholders
        const formInputs = document.querySelectorAll('.contact-form input, .contact-form textarea');
        formInputs.forEach(input => {
            const name = input.getAttribute('name');
            if (contact.form[name]) {
                input.placeholder = contact.form[name];
            }
        });

        // Update form button
        const formBtn = document.querySelector('.contact-form .btn');
        if (formBtn) {
            formBtn.innerHTML = `<i class="fas fa-paper-plane"></i> ${contact.form.send}`;
        }

        // Update form note
        const formNote = document.querySelector('.form-note');
        if (formNote) {
            formNote.innerHTML = `${contact.form.note} <a href="mailto:huynv14.work@gmail.com?subject=Portfolio Contact&body=Hello Huy,%0D%0A%0D%0A" class="email-link">huynv14.work@gmail.com</a>`;
        }
    }

    updateProfileInfo(profile) {
        // Update profile name
        const profileName = document.querySelector('.profile-name');
        if (profileName) {
            profileName.textContent = profile.name;
        }

        // Update profile role
        const profileRole = document.querySelector('.profile-role');
        if (profileRole) {
            profileRole.textContent = profile.role;
        }
    }

    initTypingAnimation() {
        const t = translations[this.currentLanguage];
        if (typeof Typed !== 'undefined') {
            window.typingAnimation = new Typed('.typing', {
                strings: t.home.professions,
                typeSpeed: 50,
                backSpeed: 50,
                loop: true
            });
        }
    }
}

// Initialize language manager when DOM is loaded
document.addEventListener('DOMContentLoaded', () => {
    console.log('Initializing Language Manager...');

    // Small delay to ensure all DOM elements are loaded
    setTimeout(() => {
        try {
            window.languageManager = new LanguageManager();
            console.log('Language Manager initialized successfully');
        } catch (error) {
            console.error('Error initializing Language Manager:', error);
        }
    }, 100);
});

// Export for use in other scripts
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { translations, LanguageManager };
}
